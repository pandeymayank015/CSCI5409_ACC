{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpandey/IdeaProjects/mpandey/TermAssignment/BookAvengers-Frontend/src/Home.js\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Welcome to BookAvengers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: \"BookAvengers is an online book management platform that allows users to browse and manage their book collections. It provides features for adding new books, updating book status, and deleting books.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Services Used in BookAvengers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"AWS Lambda: Serverless functions are used to handle backend logic, such as registering users, managing book data, and handling user authentication.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"API Gateway: Acts as the entry point for API requests and manages the routing of those requests to the appropriate Lambda functions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"EC2: Virtual server instances are used to host the frontend application and serve it to users.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"SNS (Simple Notification Service): Used for sending notifications to users, such as book updates or new releases.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"SQS (Simple Queue Service): Provides a message queue for asynchronous processing of book-related tasks, such as book indexing or processing user requests.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"DynamoDB: A NoSQL database service used to store and retrieve book data, user information, and other relevant information for the BookAvengers platform.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","Home","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","primary","_c","$RefreshReg$"],"sources":["/Users/mayankpandey/IdeaProjects/mpandey/TermAssignment/BookAvengers-Frontend/src/Home.js"],"sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>Welcome to BookAvengers</Typography>\n            <Typography variant=\"body1\" gutterBottom>\n                BookAvengers is an online book management platform that allows users to browse and manage their book collections.\n                It provides features for adding new books, updating book status, and deleting books.\n            </Typography>\n            <Typography variant=\"h6\" gutterBottom>Services Used in BookAvengers:</Typography>\n            <List>\n                <ListItem>\n                    <ListItemText primary=\"AWS Lambda: Serverless functions are used to handle backend logic, such as registering users, managing book data, and handling user authentication.\" />\n                </ListItem>\n                <ListItem>\n                    <ListItemText primary=\"API Gateway: Acts as the entry point for API requests and manages the routing of those requests to the appropriate Lambda functions.\" />\n                </ListItem>\n                <ListItem>\n                    <ListItemText primary=\"EC2: Virtual server instances are used to host the frontend application and serve it to users.\" />\n                </ListItem>\n                <ListItem>\n                    <ListItemText primary=\"SNS (Simple Notification Service): Used for sending notifications to users, such as book updates or new releases.\" />\n                </ListItem>\n                <ListItem>\n                    <ListItemText primary=\"SQS (Simple Queue Service): Provides a message queue for asynchronous processing of book-related tasks, such as book indexing or processing user requests.\" />\n                </ListItem>\n                <ListItem>\n                <ListItemText primary=\"DynamoDB: A NoSQL database service used to store and retrieve book data, user information, and other relevant information for the BookAvengers platform.\" />\n                </ListItem>\n\n\n                {/* Add other list items as needed */}\n            </List>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA,CAACL,UAAU;MAACQ,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAAuB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC1ER,OAAA,CAACL,UAAU;MAACQ,OAAO,EAAC,OAAO;MAACC,YAAY;MAAAF,QAAA,EAAC;IAGzC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbR,OAAA,CAACL,UAAU;MAACQ,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAA8B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACjFR,OAAA,CAACJ,IAAI;MAAAM,QAAA,gBACDF,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACLF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAAqJ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxK,CAAC,eACXR,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACLF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAAsI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzJ,CAAC,eACXR,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACLF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAAgG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnH,CAAC,eACXR,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACLF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAAmH;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtI,CAAC,eACXR,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACLF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAA4J;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/K,CAAC,eACXR,OAAA,CAACH,QAAQ;QAAAK,QAAA,eACTF,OAAA,CAACF,YAAY;UAACW,OAAO,EAAC;QAA0J;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACE,EAAA,GAlCIT,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}