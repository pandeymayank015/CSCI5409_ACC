{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/Home.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to BookAvengers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"BookAvengers is an online book management platform that allows users to browse and manage their book collections. It provides features for adding new books, updating book status, and deleting books.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Services Used in BookAvengers:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"AWS Lambda: Serverless functions are used to handle backend logic, such as registering users, managing book data, and handling user authentication.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"API Gateway: Acts as the entry point for API requests and manages the routing of those requests to the appropriate Lambda functions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"EC2: Virtual server instances are used to host the frontend application and serve it to users.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"SNS (Simple Notification Service): Used for sending notifications to users, such as book updates or new releases.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"SQS (Simple Queue Service): Provides a message queue for asynchronous processing of book-related tasks, such as book indexing or processing user requests.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"DynamoDB: A NoSQL database service used to store and retrieve book data, user information, and other relevant information for the BookAvengers platform.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Home","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/Home.js"],"sourcesContent":["import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>Welcome to BookAvengers</h1>\n            <p>\n                BookAvengers is an online book management platform that allows users to browse and manage their book collections. It provides features for adding new books, updating book status, and deleting books.\n            </p>\n            <p>\n                Services Used in BookAvengers:\n            </p>\n            <ol>\n                <li>AWS Lambda: Serverless functions are used to handle backend logic, such as registering users, managing book data, and handling user authentication.</li>\n                <li>API Gateway: Acts as the entry point for API requests and manages the routing of those requests to the appropriate Lambda functions.</li>\n                <li>EC2: Virtual server instances are used to host the frontend application and serve it to users.</li>\n                <li>SNS (Simple Notification Service): Used for sending notifications to users, such as book updates or new releases.</li>\n                <li>SQS (Simple Queue Service): Provides a message queue for asynchronous processing of book-related tasks, such as book indexing or processing user requests.</li>\n                <li>DynamoDB: A NoSQL database service used to store and retrieve book data, user information, and other relevant information for the BookAvengers platform.</li>\n            </ol>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCN,OAAA;MAAAE,QAAA,EAAG;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJN,OAAA;MAAAE,QAAA,EAAG;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJN,OAAA;MAAAE,QAAA,gBACIF,OAAA;QAAAE,QAAA,EAAI;MAAmJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5JN,OAAA;QAAAE,QAAA,EAAI;MAAoI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7IN,OAAA;QAAAE,QAAA,EAAI;MAA8F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvGN,OAAA;QAAAE,QAAA,EAAI;MAAiH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1HN,OAAA;QAAAE,QAAA,EAAI;MAA0J;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnKN,OAAA;QAAAE,QAAA,EAAI;MAAwJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACC,EAAA,GApBIN,IAAI;AAsBV,eAAeA,IAAI;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}