{"ast":null,"code":"import axios from 'axios';\nexport const getUser = () => {\n  const user = sessionStorage.getItem('user');\n  if (!user || user === 'undefined') {\n    return null;\n  } else {\n    return JSON.parse(user);\n  }\n};\nexport const getToken = () => {\n  return sessionStorage.getItem('token');\n};\nexport const setUserSession = (user, token) => {\n  sessionStorage.setItem('user', JSON.stringify(user));\n  sessionStorage.setItem('token', token);\n};\nexport const resetUserSession = () => {\n  sessionStorage.removeItem('user');\n  sessionStorage.removeItem('token');\n};\nexport const axiosInstance = axios.create({\n  baseURL: `${backendUrl}/verify`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","getUser","user","sessionStorage","getItem","JSON","parse","getToken","setUserSession","token","setItem","stringify","resetUserSession","removeItem","axiosInstance","create","baseURL","backendUrl","headers","interceptors","request","use","config","Authorization","error","Promise","reject"],"sources":["/Users/mayankpandey/IdeaProjects/mpandey-1/TermAssignment/BookAvengers-Frontend/src/service/AuthService.js"],"sourcesContent":["import axios from 'axios';\n\nexport const getUser = () => {\n    const user = sessionStorage.getItem('user');\n    if (!user || user === 'undefined') {\n        return null;\n    } else {\n        return JSON.parse(user);\n    }\n};\n\nexport const getToken = () => {\n    return sessionStorage.getItem('token');\n};\n\nexport const setUserSession = (user, token) => {\n    sessionStorage.setItem('user', JSON.stringify(user));\n    sessionStorage.setItem('token', token);\n};\n\nexport const resetUserSession = () => {\n    sessionStorage.removeItem('user');\n    sessionStorage.removeItem('token');\n};\n\nexport const axiosInstance = axios.create({\n    baseURL: `${backendUrl}/verify`,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n});\n\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = getToken();\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACzB,MAAMC,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,IAAI,CAACF,IAAI,IAAIA,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO,IAAI;EACf,CAAC,MAAM;IACH,OAAOG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAC1B,OAAOJ,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGA,CAACN,IAAI,EAAEO,KAAK,KAAK;EAC3CN,cAAc,CAACO,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACT,IAAI,CAAC,CAAC;EACpDC,cAAc,CAACO,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAClCT,cAAc,CAACU,UAAU,CAAC,MAAM,CAAC;EACjCV,cAAc,CAACU,UAAU,CAAC,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGd,KAAK,CAACe,MAAM,CAAC;EACtCC,OAAO,EAAG,GAAEC,UAAW,SAAQ;EAC/BC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EACR,MAAMb,KAAK,GAAGF,QAAQ,CAAC,CAAC;EACxB,IAAIE,KAAK,EAAE;IACPa,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAI,UAASd,KAAM,EAAC;EACpD;EACA,OAAOa,MAAM;AACjB,CAAC,EACAE,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}