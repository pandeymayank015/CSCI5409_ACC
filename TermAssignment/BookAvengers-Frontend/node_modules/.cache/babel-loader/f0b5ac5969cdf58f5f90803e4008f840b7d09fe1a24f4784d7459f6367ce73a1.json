{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/PremiumContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { setUserSession, resetUserSession, getToken } from './service/AuthService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PremiumContent = props => {\n  _s();\n  var _JSON$parse;\n  const [books, setBooks] = useState([]);\n  const [newBook, setNewBook] = useState('');\n  const [selectedBook, setSelectedBook] = useState('');\n  const [bookStatus, setBookStatus] = useState('');\n  const token = localStorage.getItem('token');\n  const email = ((_JSON$parse = JSON.parse(sessionStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.email) || '';\n  const fetchBooks = async () => {\n    try {\n      const response = await axios.get('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/books', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setBooks(response.data.books);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n    }\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []); // Empty dependency array to run the effect only once\n\n  const handleAddBook = async () => {\n    try {\n      // Fetch the token using the AuthService getToken() function\n      const token = getToken();\n      const response = await axios.post('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book', {\n        name: newBook,\n        status: 'Available'\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}` // Use the fetched token here\n        }\n      });\n\n      if (response.status === 200) {\n        // Book addition successful\n        setNewBook('');\n        setBooks(prevBooks => [...prevBooks, response.data.Item]);\n        fetchBooks(); // Refresh books after successful addition\n      } else {\n        // Handle error if necessary\n      }\n    } catch (error) {\n      console.error('Error adding book:', error);\n      // Handle error if necessary\n    }\n  };\n\n  const handleUpdateStatus = async () => {\n    try {\n      const response = await axios.patch(`https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book`, {\n        id: selectedBook,\n        updateKey: 'status',\n        updateValue: bookStatus\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedBook = response.data.UpdatedAttributes;\n      setBooks(prevBooks => prevBooks.map(book => book.id === updatedBook.id ? updatedBook : book));\n      setSelectedBook('');\n      setBookStatus('');\n      fetchBooks(); // Refresh books after successful status update\n    } catch (error) {\n      console.error('Error updating book status:', error);\n    }\n  };\n  const handleDeleteBook = async bookId => {\n    try {\n      await axios.delete('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book', {\n        data: {\n          id: bookId\n        },\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setBooks(prevBooks => prevBooks.filter(book => book.id !== bookId));\n    } catch (error) {\n      console.error('Error deleting book:', error);\n    }\n  };\n  const logoutHandler = () => {\n    resetUserSession();\n    props.history.push('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello \", email, \"!\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Logout\",\n      onClick: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [book.name, \" - \", book.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteBook(book.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newBook,\n      onChange: e => setNewBook(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddBook,\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Book Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedBook,\n        onChange: e => setSelectedBook(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: book.id,\n          children: book.name\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: bookStatus,\n        onChange: e => setBookStatus(e.target.value),\n        placeholder: \"Enter new status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateStatus,\n        children: \"Update Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(PremiumContent, \"tpV9d2Rn9s60I8kwJYX8LWxhFHI=\");\n_c = PremiumContent;\nexport default PremiumContent;\nvar _c;\n$RefreshReg$(_c, \"PremiumContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","setUserSession","resetUserSession","getToken","jsxDEV","_jsxDEV","PremiumContent","props","_s","_JSON$parse","books","setBooks","newBook","setNewBook","selectedBook","setSelectedBook","bookStatus","setBookStatus","token","localStorage","getItem","email","JSON","parse","sessionStorage","fetchBooks","response","get","headers","Authorization","data","error","console","handleAddBook","post","name","status","prevBooks","Item","handleUpdateStatus","patch","id","updateKey","updateValue","updatedBook","UpdatedAttributes","map","book","handleDeleteBook","bookId","delete","filter","logoutHandler","history","push","children","type","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/PremiumContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {setUserSession, resetUserSession, getToken} from './service/AuthService.js';\n\nconst PremiumContent = (props) => {\n    const [books, setBooks] = useState([]);\n    const [newBook, setNewBook] = useState('');\n    const [selectedBook, setSelectedBook] = useState('');\n    const [bookStatus, setBookStatus] = useState('');\n    const token = localStorage.getItem('token');\n    const email = JSON.parse(sessionStorage.getItem('user'))?.email || '';\n\n    const fetchBooks = async () => {\n        try {\n            const response = await axios.get('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/books', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\n                },\n            });\n            setBooks(response.data.books);\n        } catch (error) {\n            console.error('Error fetching books:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchBooks();\n    }, []); // Empty dependency array to run the effect only once\n\n    const handleAddBook = async () => {\n        try {\n            // Fetch the token using the AuthService getToken() function\n            const token = getToken();\n\n            const response = await axios.post(\n                'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book',\n                {\n                    name: newBook,\n                    status: 'Available',\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`, // Use the fetched token here\n                    },\n                }\n            );\n\n            if (response.status === 200) {\n                // Book addition successful\n                setNewBook('');\n                setBooks((prevBooks) => [...prevBooks, response.data.Item]);\n                fetchBooks(); // Refresh books after successful addition\n            } else {\n                // Handle error if necessary\n            }\n        } catch (error) {\n            console.error('Error adding book:', error);\n            // Handle error if necessary\n        }\n    };\n\n\n    const handleUpdateStatus = async () => {\n        try {\n            const response = await axios.patch(\n                `https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book`,\n                {\n                    id: selectedBook,\n                    updateKey: 'status',\n                    updateValue: bookStatus,\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                }\n            );\n            const updatedBook = response.data.UpdatedAttributes;\n            setBooks((prevBooks) =>\n                prevBooks.map((book) => (book.id === updatedBook.id ? updatedBook : book))\n            );\n            setSelectedBook('');\n            setBookStatus('');\n            fetchBooks(); // Refresh books after successful status update\n        } catch (error) {\n            console.error('Error updating book status:', error);\n        }\n    };\n\n    const handleDeleteBook = async (bookId) => {\n        try {\n            await axios.delete(\n                'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/book',\n                {\n                    data: { id: bookId },\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`,\n                    },\n                }\n            );\n            setBooks((prevBooks) => prevBooks.filter((book) => book.id !== bookId));\n        } catch (error) {\n            console.error('Error deleting book:', error);\n        }\n    };\n\n    const logoutHandler = () => {\n        resetUserSession();\n        props.history.push('/login');\n    };\n\n    return (\n        <div>\n            Hello {email}!\n            <input type=\"button\" value=\"Logout\" onClick={logoutHandler} />\n\n            <h1>Book Library</h1>\n\n            <h2>Books</h2>\n            <ul>\n                {books.map((book) => (\n                    <li key={book.id}>\n                        {book.name} - {book.status}\n                        <button onClick={() => handleDeleteBook(book.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <h2>Add Book</h2>\n            <input type=\"text\" value={newBook} onChange={(e) => setNewBook(e.target.value)} />\n            <button onClick={handleAddBook}>Add Book</button>\n\n            <div>\n                <h2>Update Book Status</h2>\n                <select value={selectedBook} onChange={(e) => setSelectedBook(e.target.value)}>\n                    <option value=\"\">Select a book</option>\n                    {books.map((book) => (\n                        <option key={book.id} value={book.id}>\n                            {book.name}\n                        </option>\n                    ))}\n                </select>\n                <input\n                    type=\"text\"\n                    value={bookStatus}\n                    onChange={(e) => setBookStatus(e.target.value)}\n                    placeholder=\"Enter new status\"\n                />\n                <button onClick={handleUpdateStatus}>Update Status</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PremiumContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}