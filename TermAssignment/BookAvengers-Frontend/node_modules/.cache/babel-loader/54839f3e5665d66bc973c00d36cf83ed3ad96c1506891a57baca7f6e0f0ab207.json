{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/PremiumContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { axiosInstance, getToken, getUser, resetUserSession } from './service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PremiumContent = props => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [newBook, setNewBook] = useState('');\n  const [selectedBook, setSelectedBook] = useState('');\n  const [bookStatus, setBookStatus] = useState('');\n  const user = getUser();\n  const email = user !== 'undefined' && user ? user.email : '';\n  const fetchBooks = async () => {\n    try {\n      const response = await axios.get('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/books', {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      setBooks(response.data.books);\n    } catch (error) {\n      console.error('Error fetching books:', error);\n    }\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, []); // Empty dependency array to run the effect only once\n\n  const handleAddBook = async () => {\n    try {\n      const token = getToken();\n      const response = await axiosInstance.post('/book', {\n        name: newBook\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNewBook('');\n      setBooks(prevBooks => [...prevBooks, response.data.Item]);\n      await fetchBooks(); // Refresh books after successful addition\n    } catch (error) {\n      console.error('Error adding book:', error);\n    }\n  };\n  const handleUpdateStatus = async () => {\n    try {\n      const token = getToken();\n      const response = await axiosInstance.patch('/book', {\n        id: selectedBook,\n        updateKey: 'status',\n        updateValue: bookStatus\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedBook = response.data.UpdatedAttributes;\n      setBooks(prevBooks => prevBooks.map(book => book.id === updatedBook.id ? updatedBook : book));\n      setSelectedBook('');\n      setBookStatus('');\n      await fetchBooks(); // Refresh books after successful status update\n    } catch (error) {\n      console.error('Error updating book status:', error);\n    }\n  };\n  const handleDeleteBook = async bookId => {\n    try {\n      const token = getToken();\n      await axiosInstance.delete('/book', {\n        data: {\n          id: bookId\n        },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setBooks(prevBooks => prevBooks.filter(book => book.id !== bookId));\n    } catch (error) {\n      console.error('Error deleting book:', error);\n    }\n  };\n  const logoutHandler = () => {\n    resetUserSession();\n    props.history.push('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello \", email, \"!\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"logout\",\n      onClick: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [book.name, \" - \", book.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteBook(book.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newBook,\n      onChange: e => setNewBook(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddBook,\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Book Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedBook,\n        onChange: e => setSelectedBook(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: book.id,\n          children: book.name\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: bookStatus,\n        onChange: e => setBookStatus(e.target.value),\n        placeholder: \"Enter new status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateStatus,\n        children: \"Update Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(PremiumContent, \"tpV9d2Rn9s60I8kwJYX8LWxhFHI=\");\n_c = PremiumContent;\nexport default PremiumContent;\nvar _c;\n$RefreshReg$(_c, \"PremiumContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","axiosInstance","getToken","getUser","resetUserSession","jsxDEV","_jsxDEV","PremiumContent","props","_s","books","setBooks","newBook","setNewBook","selectedBook","setSelectedBook","bookStatus","setBookStatus","user","email","fetchBooks","response","get","headers","Authorization","token","data","error","console","handleAddBook","post","name","prevBooks","Item","handleUpdateStatus","patch","id","updateKey","updateValue","updatedBook","UpdatedAttributes","map","book","handleDeleteBook","bookId","delete","filter","logoutHandler","history","push","children","type","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","status","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/PremiumContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { axiosInstance, getToken, getUser, resetUserSession } from './service/AuthService';\n\nconst PremiumContent = (props) => {\n    const [books, setBooks] = useState([]);\n    const [newBook, setNewBook] = useState('');\n    const [selectedBook, setSelectedBook] = useState('');\n    const [bookStatus, setBookStatus] = useState('');\n    const user = getUser();\n    const email = user !== 'undefined' && user ? user.email : '';\n\n    const fetchBooks = async () => {\n        try {\n            const response = await axios.get('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/books', {\n                headers: {\n                    Authorization: `Bearer ${user.token}`,\n                },\n            });\n            setBooks(response.data.books);\n        } catch (error) {\n            console.error('Error fetching books:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchBooks();\n    }, []); // Empty dependency array to run the effect only once\n\n    const handleAddBook = async () => {\n        try {\n            const token = getToken();\n            const response = await axiosInstance.post('/book', { name: newBook }, { headers: { Authorization: `Bearer ${token}` } });\n            setNewBook('');\n            setBooks((prevBooks) => [...prevBooks, response.data.Item]);\n            await fetchBooks(); // Refresh books after successful addition\n        } catch (error) {\n            console.error('Error adding book:', error);\n        }\n    };\n\n    const handleUpdateStatus = async () => {\n        try {\n            const token = getToken();\n            const response = await axiosInstance.patch(\n                '/book',\n                { id: selectedBook, updateKey: 'status', updateValue: bookStatus },\n                { headers: { Authorization: `Bearer ${token}` } }\n            );\n            const updatedBook = response.data.UpdatedAttributes;\n            setBooks((prevBooks) => prevBooks.map((book) => (book.id === updatedBook.id ? updatedBook : book)));\n            setSelectedBook('');\n            setBookStatus('');\n            await fetchBooks(); // Refresh books after successful status update\n        } catch (error) {\n            console.error('Error updating book status:', error);\n        }\n    };\n\n    const handleDeleteBook = async (bookId) => {\n        try {\n            const token = getToken();\n            await axiosInstance.delete('/book', { data: { id: bookId }, headers: { Authorization: `Bearer ${token}` } });\n            setBooks((prevBooks) => prevBooks.filter((book) => book.id !== bookId));\n        } catch (error) {\n            console.error('Error deleting book:', error);\n        }\n    };\n\n    const logoutHandler = () => {\n        resetUserSession();\n        props.history.push('/login');\n    };\n\n    return (\n        <div>\n            Hello {email}!\n            <input type=\"button\" value=\"logout\" onClick={logoutHandler} />\n\n            <h1>Book Library</h1>\n\n            <h2>Books</h2>\n            <ul>\n                {books.map((book) => (\n                    <li key={book.id}>\n                        {book.name} - {book.status}\n                        <button onClick={() => handleDeleteBook(book.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <h2>Add Book</h2>\n            <input type=\"text\" value={newBook} onChange={(e) => setNewBook(e.target.value)} />\n            <button onClick={handleAddBook}>Add Book</button>\n\n            <div>\n                <h2>Update Book Status</h2>\n                <select value={selectedBook} onChange={(e) => setSelectedBook(e.target.value)}>\n                    <option value=\"\">Select a book</option>\n                    {books.map((book) => (\n                        <option key={book.id} value={book.id}>\n                            {book.name}\n                        </option>\n                    ))}\n                </select>\n                <input\n                    type=\"text\"\n                    value={bookStatus}\n                    onChange={(e) => setBookStatus(e.target.value)}\n                    placeholder=\"Enter new status\"\n                />\n                <button onClick={handleUpdateStatus}>Update Status</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PremiumContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}