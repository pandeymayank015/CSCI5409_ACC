{"ast":null,"code":"var _jsxFileName = \"/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/Register.js\",\n  _s = $RefreshSig$();\n/*\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleRegister = async () => {\n        // Perform validation on name, email, and password fields\n        if (!name || !email || !password) {\n            alert('All fields are required.');\n            return;\n        }\n\n        const apiKey = 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV';\n\n        try {\n            const response = await axios.post(\n                'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/register',\n                {\n                    name,\n                    email,\n                    password,\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'x-api-key': apiKey,\n                    },\n                }\n            );\n\n            if (response.status === 200) {\n                // Registration successful\n                alert(`Registration successful for user with email: ${email}`);\n                // Perform any additional actions upon successful registration\n            } else {\n                // Registration failed\n                alert(response.data.message);\n            }\n        } catch (error) {\n            console.error('An error occurred during registration:', error);\n            alert('An error occurred during registration. Please try again later.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            <div>\n                <label>Password:</label>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </div>\n            <button onClick={handleRegister}>Register</button>\n        </div>\n    );\n};\n\nexport default Register;\n*/\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [otp, setOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const handleRegister = async () => {\n    // If OTP is not sent yet, send the OTP first and wait for verification\n    if (!isOtpSent) {\n      try {\n        const response = await axios.post('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/register', {\n          name,\n          email,\n          password\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV'\n          }\n        });\n        if (response.status === 200) {\n          // Registration successful\n          alert(`OTP sent to your email. Please check your inbox and enter the OTP to verify.`);\n          setIsOtpSent(true);\n        } else {\n          // Registration failed\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('An error occurred during registration:', error);\n        alert('An error occurred during registration. Please try again later.');\n      }\n    } else {\n      // If OTP is already sent, verify it\n      try {\n        const response = await axios.post('https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/verifyOTP', {\n          email,\n          otp\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'x-api-key': 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV'\n          }\n        });\n        if (response.status === 200) {\n          // OTP verification successful\n          alert('OTP verification successful. You can now set your password and register.');\n          // Proceed with the rest of the registration process, e.g., set the password and complete the registration\n        } else {\n          // OTP verification failed\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('Error verifying OTP:', error);\n        alert('An error occurred while verifying OTP. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), isOtpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: isOtpSent ? 'Verify OTP and Register' : 'Send OTP to Verify Email'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"ln2DXWUe4dY7RxIHS1Ck2s5bqsU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","otp","setOtp","isOtpSent","setIsOtpSent","handleRegister","response","post","headers","status","alert","data","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/mayankpandey/Desktop/mpandey/TermAssignment/BookAvengers-Frontend/src/Register.js"],"sourcesContent":["/*\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleRegister = async () => {\n        // Perform validation on name, email, and password fields\n        if (!name || !email || !password) {\n            alert('All fields are required.');\n            return;\n        }\n\n        const apiKey = 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV';\n\n        try {\n            const response = await axios.post(\n                'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/register',\n                {\n                    name,\n                    email,\n                    password,\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'x-api-key': apiKey,\n                    },\n                }\n            );\n\n            if (response.status === 200) {\n                // Registration successful\n                alert(`Registration successful for user with email: ${email}`);\n                // Perform any additional actions upon successful registration\n            } else {\n                // Registration failed\n                alert(response.data.message);\n            }\n        } catch (error) {\n            console.error('An error occurred during registration:', error);\n            alert('An error occurred during registration. Please try again later.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            <div>\n                <label>Password:</label>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </div>\n            <button onClick={handleRegister}>Register</button>\n        </div>\n    );\n};\n\nexport default Register;\n*/\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [otp, setOtp] = useState('');\n    const [isOtpSent, setIsOtpSent] = useState(false);\n\n    const handleRegister = async () => {\n        // If OTP is not sent yet, send the OTP first and wait for verification\n        if (!isOtpSent) {\n            try {\n                const response = await axios.post(\n                    'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/register',\n                    {\n                        name,\n                        email,\n                        password,\n                    },\n                    {\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-api-key': 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV',\n                        },\n                    }\n                );\n\n                if (response.status === 200) {\n                    // Registration successful\n                    alert(`OTP sent to your email. Please check your inbox and enter the OTP to verify.`);\n                    setIsOtpSent(true);\n                } else {\n                    // Registration failed\n                    alert(response.data.message);\n                }\n            } catch (error) {\n                console.error('An error occurred during registration:', error);\n                alert('An error occurred during registration. Please try again later.');\n            }\n        } else {\n            // If OTP is already sent, verify it\n            try {\n                const response = await axios.post(\n                    'https://0i2oilda27.execute-api.us-east-1.amazonaws.com/prod/verifyOTP',\n                    {\n                        email,\n                        otp,\n                    },\n                    {\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'x-api-key': 'z4RHzesbGa7yo0IEGP1n18DuLtfnzEdn6N1QwvyV',\n                        },\n                    }\n                );\n\n                if (response.status === 200) {\n                    // OTP verification successful\n                    alert('OTP verification successful. You can now set your password and register.');\n                    // Proceed with the rest of the registration process, e.g., set the password and complete the registration\n                } else {\n                    // OTP verification failed\n                    alert(response.data.message);\n                }\n            } catch (error) {\n                console.error('Error verifying OTP:', error);\n                alert('An error occurred while verifying OTP. Please try again later.');\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <div>\n                <label>Name:</label>\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div>\n                <label>Email:</label>\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            {isOtpSent ? (\n                <div>\n                    <label>OTP:</label>\n                    <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} />\n                </div>\n            ) : null}\n            <div>\n                <label>Password:</label>\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </div>\n            <button onClick={handleRegister}>\n                {isOtpSent ? 'Verify OTP and Register' : 'Send OTP to Verify Email'}\n            </button>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAI,CAACF,SAAS,EAAE;MACZ,IAAI;QACA,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC7B,sEAAsE,EACtE;UACIZ,IAAI;UACJE,KAAK;UACLE;QACJ,CAAC,EACD;UACIS,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,WAAW,EAAE;UACjB;QACJ,CACJ,CAAC;QAED,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACzB;UACAC,KAAK,CAAE,8EAA6E,CAAC;UACrFN,YAAY,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM;UACH;UACAM,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9DH,KAAK,CAAC,gEAAgE,CAAC;MAC3E;IACJ,CAAC,MAAM;MACH;MACA,IAAI;QACA,MAAMJ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC7B,uEAAuE,EACvE;UACIV,KAAK;UACLI;QACJ,CAAC,EACD;UACIO,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,WAAW,EAAE;UACjB;QACJ,CACJ,CAAC;QAED,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;UACzB;UACAC,KAAK,CAAC,0EAA0E,CAAC;UACjF;QACJ,CAAC,MAAM;UACH;UACAA,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CH,KAAK,CAAC,gEAAgE,CAAC;MAC3E;IACJ;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3B,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB3B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE1B,IAAK;QAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACN3B,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB3B,OAAA;QAAO4B,IAAI,EAAC,OAAO;QAACC,KAAK,EAAExB,KAAM;QAACyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,EACLhB,SAAS,gBACNX,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnB3B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,GAAI;QAACqB,QAAQ,EAAGC,CAAC,IAAKrB,MAAM,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,GACN,IAAI,eACR3B,OAAA;MAAAuB,QAAA,gBACIvB,OAAA;QAAAuB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB3B,OAAA;QAAO4B,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEtB,QAAS;QAACuB,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACN3B,OAAA;MAAQiC,OAAO,EAAEpB,cAAe;MAAAU,QAAA,EAC3BZ,SAAS,GAAG,yBAAyB,GAAG;IAA0B;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACzB,EAAA,CAhGID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAkGd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}